fragment {
	set material {
		vec3 color;
		vec3 normal;
		uint counter;
	};
}

vertex {
	set object {
		float time;
		mat4 mvp;
	};

	/*set sub_object {
		uint lol;
		double xdd;
	};*/

	in vec3 in_pos;
	in vec3 in_normal;
	in vec2 in_uv;

	out vec3 vtx_pos;
	out vec3 vtx_normal;

	void main(void)
	{
		//vec3 in_pos = vec3(2.3);
		//vec2 pos;
		gl_Position = vec4(in_pos.x, in_pos.y, 0.5, 1.0);
		vtx_pos = in_pos;
		vtx_normal = in_normal;
	}
}

fragment {
	out vec3 screen_color;

	void main(void)
	{
		screen_color = normalize(vtx_normal) + vec3(material.counter / 256.0);
	}
}

/*vertex {

	in vec3 in_pos;
	in vec3 in_normal;
	in vec2 in_uv;

	out vec3 vtx_pos;
	out vec3 vtx_normal;

	void main(void)
	{
		//vec3 in_pos = vec3(2.3);
		//vec2 pos;
		//gl_Position = object.mvp * vec4(in_pos, 1.0);
	}
}

fragment {
	out vec3 screen_color;

	void main(void)
	{
		screen_color = vec3(1.0);
	}
}*/